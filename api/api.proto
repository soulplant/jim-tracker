syntax = "proto3";

package api;

import "google/api/annotations.proto";

message User {
  string id = 1;
  string name = 2;
  string nextTalk = 3;
}

message Talk {
  string id = 1;
  string name = 2;
  string speakerId = 3;
  bool done = 4;
  repeated string url = 5;
}

message FetchAllRequest {
}

message FetchAllResponse {
  string version = 1;
  repeated User user = 2;
  repeated Talk talk = 3;
}

message AddUserRequest {
  string name = 1;
}

message AddUserResponse {
  // The newly added user.
  User user = 1;
}

message AddTalkRequest {
  string userId = 1;
}

message AddTalkResponse {
  Talk talk = 1;
}

message ReorderRequest {
  int64 version = 1;
  string moveUserId = 2;
  string anchorUserId = 3;
  bool before = 4;
}

message ReorderResponse {
  bool accepted = 1;
  string version = 2;
}

message GetUsersRequest {
}

message GetUsersResponse {
  int64 version = 1;
  repeated User user = 2;
}

message UpdateUserRequest {
  string userId = 1;
  string name = 2;
  string nextTalkName = 3;
}

message UpdateUserResponse {
}

message RemoveUserRequest {
  string userId = 1;
}

message RemoveUserResponse {
}

service ApiService {
  rpc FetchAll (FetchAllRequest) returns (FetchAllResponse) {
    option (google.api.http) = {
      get: "/v1/fetch-all"
    };
  }

  rpc GetUsers (GetUsersRequest) returns (GetUsersResponse) {
    option (google.api.http) = {
      get: "/v1/user"
    };
  }

  rpc AddUser (AddUserRequest) returns (AddUserResponse) {
    option (google.api.http) = {
      post: "/v1/user"
      body: "*"
    };
  }

  rpc UpdateUser (UpdateUserRequest) returns (UpdateUserResponse) {
    option (google.api.http) = {
      patch: "/v1/user/{userId}"
      body: "*"
    };
  }

  rpc RemoveUser (RemoveUserRequest) returns (RemoveUserResponse) {
    option (google.api.http) = {
      delete: "/v1/user/{userId}"
    };
  }

  // Change the position of one user in the list of upcoming talks.
  rpc Reorder (ReorderRequest) returns (ReorderResponse) {
    option (google.api.http) = {
      post: "/v1/reorder"
      body: "*"
    };
  }

  rpc AddTalk (AddTalkRequest) returns (AddTalkResponse) {
    option (google.api.http) = {
      post: "/v1/talk"
      body: "*"
    };
  }
}
